/*
 * QubotView.java
 */

package es.pmp.qubot;

import es.pmp.qubot.conocimiento.CPregunta;
import es.pmp.qubot.conocimiento.CPreguntaYRespuestas;
import es.pmp.qubot.imagenes.Colores;
import es.pmp.qubot.jna.Jna;
import es.pmp.qubot.imagenes.Imagenes;
import es.pmp.qubot.imagenes.Pantallas;
import es.pmp.qubot.imagenes.Regiones;
import es.pmp.qubot.jna.ProcesoVysor;
import es.pmp.qubot.tipos.CProceso;
import java.awt.image.BufferedImage;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;

/**
 * The application's main frame.
 */
public class QubotView extends FrameView {

    public Jna jna;
    public ProcesoVysor pv;
    
    
    /** Imagen mostrada actualmente en el formulario */
    BufferedImage imagen_en_pantalla;
            
            
    
    public QubotView(SingleFrameApplication app) {
        super(app);
        initComponents();        
        jna = new Jna();
        pv = new ProcesoVysor(this);
        
        this.tfTituloVentanaVysor.setText(Comun.TITULO_VENTANA_VYSOR);
        //this.getFrame().setSize(600, 900);
        
        this.tfNombreFichero.setText("04_texto_02.png");
        
        imagen_en_pantalla = null;
    }
    
    
    
    /** 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        taPantallaPregunta = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfTituloVentanaVysor = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        taProcesoVysor = new javax.swing.JTextArea();
        btnTestDetectarVysor = new javax.swing.JButton();
        btnEnviarVysorAlFrente = new javax.swing.JButton();
        btnCapturarVysor = new javax.swing.JButton();
        btnGuardarPantallaVysor = new javax.swing.JButton();
        btnTestDetectarVysor1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblCapturaVysor = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblPos = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        taInfoPregunta = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfNombreFichero = new javax.swing.JTextField();
        btnIdentificar = new javax.swing.JButton();
        btnTest = new javax.swing.JButton();
        tfIdentificacion = new javax.swing.JTextField();
        btnCargar = new javax.swing.JButton();
        btnRegiones = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu menuArchivo = new javax.swing.JMenu();
        miListaProcesos = new javax.swing.JMenuItem();
        javax.swing.JMenuItem miSalir = new javax.swing.JMenuItem();
        frmListaProcesos = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        taListaProcesos = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();

        taPantallaPregunta.setName("taPantallaPregunta"); // NOI18N
        taPantallaPregunta.setPreferredSize(new java.awt.Dimension(915, 800));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(es.pmp.qubot.QubotApp.class).getContext().getResourceMap(QubotView.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        tfTituloVentanaVysor.setText(resourceMap.getString("tfTituloVentanaVysor.text")); // NOI18N
        tfTituloVentanaVysor.setName("tfTituloVentanaVysor"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        taProcesoVysor.setEditable(false);
        taProcesoVysor.setBackground(resourceMap.getColor("taProcesoVysor.background")); // NOI18N
        taProcesoVysor.setColumns(20);
        taProcesoVysor.setFont(resourceMap.getFont("taProcesoVysor.font")); // NOI18N
        taProcesoVysor.setRows(5);
        taProcesoVysor.setName("taProcesoVysor"); // NOI18N
        jScrollPane2.setViewportView(taProcesoVysor);

        btnTestDetectarVysor.setMnemonic('T');
        btnTestDetectarVysor.setText(resourceMap.getString("btnTestDetectarVysor.text")); // NOI18N
        btnTestDetectarVysor.setName("btnTestDetectarVysor"); // NOI18N
        btnTestDetectarVysor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestDetectarVysorActionPerformed(evt);
            }
        });

        btnEnviarVysorAlFrente.setMnemonic('T');
        btnEnviarVysorAlFrente.setText(resourceMap.getString("btnEnviarVysorAlFrente.text")); // NOI18N
        btnEnviarVysorAlFrente.setName("btnEnviarVysorAlFrente"); // NOI18N
        btnEnviarVysorAlFrente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarVysorAlFrenteActionPerformed(evt);
            }
        });

        btnCapturarVysor.setMnemonic('T');
        btnCapturarVysor.setText(resourceMap.getString("btnCapturarVysor.text")); // NOI18N
        btnCapturarVysor.setName("btnCapturarVysor"); // NOI18N
        btnCapturarVysor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapturarVysorActionPerformed(evt);
            }
        });

        btnGuardarPantallaVysor.setMnemonic('T');
        btnGuardarPantallaVysor.setText(resourceMap.getString("btnGuardarPantallaVysor.text")); // NOI18N
        btnGuardarPantallaVysor.setName("btnGuardarPantallaVysor"); // NOI18N
        btnGuardarPantallaVysor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPantallaVysorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTituloVentanaVysor, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTestDetectarVysor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviarVysorAlFrente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCapturarVysor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardarPantallaVysor)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfTituloVentanaVysor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTestDetectarVysor)
                    .addComponent(btnEnviarVysorAlFrente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapturarVysor)
                    .addComponent(btnGuardarPantallaVysor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnTestDetectarVysor1.setMnemonic('S');
        btnTestDetectarVysor1.setText(resourceMap.getString("btnTestDetectarVysor1.text")); // NOI18N
        btnTestDetectarVysor1.setToolTipText(resourceMap.getString("btnTestDetectarVysor1.toolTipText")); // NOI18N
        btnTestDetectarVysor1.setName("btnTestDetectarVysor1"); // NOI18N
        btnTestDetectarVysor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestDetectarVysor1ActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        lblCapturaVysor.setText(resourceMap.getString("lblCapturaVysor.text")); // NOI18N
        lblCapturaVysor.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblCapturaVysor.setName("lblCapturaVysor"); // NOI18N
        lblCapturaVysor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblCapturaVysorMouseMoved(evt);
            }
        });
        jScrollPane3.setViewportView(lblCapturaVysor);

        jPanel2.setName("jPanel2"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        lblPos.setText(resourceMap.getString("lblPos.text")); // NOI18N
        lblPos.setName("lblPos"); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        taInfoPregunta.setBackground(resourceMap.getColor("taInfoPregunta.background")); // NOI18N
        taInfoPregunta.setColumns(20);
        taInfoPregunta.setFont(resourceMap.getFont("taInfoPregunta.font")); // NOI18N
        taInfoPregunta.setRows(5);
        taInfoPregunta.setName("taInfoPregunta"); // NOI18N
        jScrollPane5.setViewportView(taInfoPregunta);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel4.border.title"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        tfNombreFichero.setText(resourceMap.getString("tfNombreFichero.text")); // NOI18N
        tfNombreFichero.setToolTipText(resourceMap.getString("tfNombreFichero.toolTipText")); // NOI18N
        tfNombreFichero.setName("tfNombreFichero"); // NOI18N

        btnIdentificar.setMnemonic('T');
        btnIdentificar.setText(resourceMap.getString("btnIdentificar.text")); // NOI18N
        btnIdentificar.setName("btnIdentificar"); // NOI18N
        btnIdentificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIdentificarActionPerformed(evt);
            }
        });

        btnTest.setText(resourceMap.getString("btnTest.text")); // NOI18N
        btnTest.setName("btnTest"); // NOI18N
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        tfIdentificacion.setBackground(resourceMap.getColor("tfIdentificacion.background")); // NOI18N
        tfIdentificacion.setText(resourceMap.getString("tfIdentificacion.text")); // NOI18N
        tfIdentificacion.setToolTipText(resourceMap.getString("tfIdentificacion.toolTipText")); // NOI18N
        tfIdentificacion.setName("tfIdentificacion"); // NOI18N

        btnCargar.setMnemonic('T');
        btnCargar.setText(resourceMap.getString("btnCargar.text")); // NOI18N
        btnCargar.setName("btnCargar"); // NOI18N
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnRegiones.setMnemonic('T');
        btnRegiones.setText(resourceMap.getString("btnRegiones.text")); // NOI18N
        btnRegiones.setName("btnRegiones"); // NOI18N
        btnRegiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tfNombreFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCargar)
                        .addGap(18, 18, 18)
                        .addComponent(btnRegiones))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnIdentificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTest))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfNombreFichero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargar)
                    .addComponent(btnRegiones))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIdentificar)
                    .addComponent(tfIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTest)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout taPantallaPreguntaLayout = new javax.swing.GroupLayout(taPantallaPregunta);
        taPantallaPregunta.setLayout(taPantallaPreguntaLayout);
        taPantallaPreguntaLayout.setHorizontalGroup(
            taPantallaPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taPantallaPreguntaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(taPantallaPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taPantallaPreguntaLayout.createSequentialGroup()
                        .addGroup(taPantallaPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(taPantallaPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPos))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(taPantallaPreguntaLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taPantallaPreguntaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTestDetectarVysor1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(346, 346, 346))
        );
        taPantallaPreguntaLayout.setVerticalGroup(
            taPantallaPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taPantallaPreguntaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(taPantallaPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taPantallaPreguntaLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPos))
                    .addGroup(taPantallaPreguntaLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(taPantallaPreguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(btnTestDetectarVysor1)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        menuArchivo.setMnemonic('A');
        menuArchivo.setText(resourceMap.getString("menuArchivo.text")); // NOI18N
        menuArchivo.setName("menuArchivo"); // NOI18N

        miListaProcesos.setMnemonic('p');
        miListaProcesos.setText(resourceMap.getString("miListaProcesos.text")); // NOI18N
        miListaProcesos.setName("miListaProcesos"); // NOI18N
        miListaProcesos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miListaProcesosActionPerformed(evt);
            }
        });
        menuArchivo.add(miListaProcesos);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(es.pmp.qubot.QubotApp.class).getContext().getActionMap(QubotView.class, this);
        miSalir.setAction(actionMap.get("quit")); // NOI18N
        miSalir.setMnemonic('S');
        miSalir.setText(resourceMap.getString("miSalir.text")); // NOI18N
        miSalir.setName("miSalir"); // NOI18N
        menuArchivo.add(miSalir);

        menuBar.add(menuArchivo);

        frmListaProcesos.setMinimumSize(new java.awt.Dimension(1200, 900));
        frmListaProcesos.setName("frmListaProcesos"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        taListaProcesos.setColumns(20);
        taListaProcesos.setFont(resourceMap.getFont("taListaProcesos.font")); // NOI18N
        taListaProcesos.setRows(5);
        taListaProcesos.setName("taListaProcesos"); // NOI18N
        jScrollPane1.setViewportView(taListaProcesos);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        btnCerrar.setMnemonic('C');
        btnCerrar.setText(resourceMap.getString("btnCerrar.text")); // NOI18N
        btnCerrar.setName("btnCerrar"); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmListaProcesosLayout = new javax.swing.GroupLayout(frmListaProcesos.getContentPane());
        frmListaProcesos.getContentPane().setLayout(frmListaProcesosLayout);
        frmListaProcesosLayout.setHorizontalGroup(
            frmListaProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmListaProcesosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmListaProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, frmListaProcesosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(frmListaProcesosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        frmListaProcesosLayout.setVerticalGroup(
            frmListaProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmListaProcesosLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addGap(24, 24, 24)
                .addComponent(btnCerrar)
                .addContainerGap())
        );

        setComponent(taPantallaPregunta);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestDetectarVysorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestDetectarVysorActionPerformed
        detectarProcesoVysor();
    }//GEN-LAST:event_btnTestDetectarVysorActionPerformed

    private void btnEnviarVysorAlFrenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarVysorAlFrenteActionPerformed
        enviarProcesoVysorAlFrente();
    }//GEN-LAST:event_btnEnviarVysorAlFrenteActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        frmListaProcesos.setVisible(false);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void miListaProcesosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miListaProcesosActionPerformed
        verListaProcesos();
    }//GEN-LAST:event_miListaProcesosActionPerformed

    private void btnCapturarVysorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapturarVysorActionPerformed
        pantallaVysor2Form();
    }//GEN-LAST:event_btnCapturarVysorActionPerformed

    private void btnTestDetectarVysor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestDetectarVysor1ActionPerformed
        salir();
    }//GEN-LAST:event_btnTestDetectarVysor1ActionPerformed

    private void btnGuardarPantallaVysorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPantallaVysorActionPerformed
        guardarPantallaVysor();
    }//GEN-LAST:event_btnGuardarPantallaVysorActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        cargarFicheroImagen();
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnIdentificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIdentificarActionPerformed
        identificarPantalla();
    }//GEN-LAST:event_btnIdentificarActionPerformed

    private void btnRegionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegionesActionPerformed
        trazarRegiones();
    }//GEN-LAST:event_btnRegionesActionPerformed

    private void lblCapturaVysorMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCapturaVysorMouseMoved
        int x = evt.getX();
        int y = evt.getY();
        mostrarCoordenadasSobrePantalla(x, y);
    }//GEN-LAST:event_lblCapturaVysorMouseMoved

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        testPantallaPregunta();
    }//GEN-LAST:event_btnTestActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapturarVysor;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEnviarVysorAlFrente;
    private javax.swing.JButton btnGuardarPantallaVysor;
    private javax.swing.JButton btnIdentificar;
    private javax.swing.JButton btnRegiones;
    private javax.swing.JButton btnTest;
    private javax.swing.JButton btnTestDetectarVysor;
    private javax.swing.JButton btnTestDetectarVysor1;
    private javax.swing.JFrame frmListaProcesos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblCapturaVysor;
    private javax.swing.JLabel lblPos;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem miListaProcesos;
    private javax.swing.JTextArea taInfoPregunta;
    private javax.swing.JTextArea taListaProcesos;
    private javax.swing.JPanel taPantallaPregunta;
    private javax.swing.JTextArea taProcesoVysor;
    private javax.swing.JTextField tfIdentificacion;
    private javax.swing.JTextField tfNombreFichero;
    private javax.swing.JTextField tfTituloVentanaVysor;
    // End of variables declaration//GEN-END:variables


    /**
     * Obtiene el título de la ventana Vysor.
     * 
     * @return 
     */
    public String getTituloVentanaVysor() {
        String titulo = this.tfTituloVentanaVysor.getText();
        return titulo;
    }
    
    
    /**
     * Muestra un mensaje de error.
     * 
     * @param mensaje                           Mensaje a mostrar
     */
    public void mostrarError(String mensaje) {
        String titulo = "Error";
        JOptionPane.showMessageDialog(this.getFrame(), mensaje, titulo, JOptionPane.ERROR_MESSAGE);
    }
    
    
    /**
     * Muestra un mensaje de error.
     * Vuelca la excepción al logger.
     * 
     * @param th                                Excepción de la que se tomará el mensaje de error
     */
    public void mostrarError(Throwable th) {
        
        Logger.getLogger(QubotView.class.getName()).log(Level.SEVERE, null, th);
        String mensaje = th.getMessage();
        mostrarError(mensaje);
    }
    
    

    
    void verListaProcesos() {
        List <CProceso> l_procesos = this.jna.getListaProcesos();
        
        StringBuilder s = new StringBuilder();
        
        int n = 1;
        for (CProceso proceso : l_procesos) {
            
            s.append(n + ". ");
            s.append("Id: " + proceso.id_proceso + ", ");
            s.append("Handle: " + proceso.hwnd.toString() + ", ");
            s.append("Posición: (" + proceso.getPosicionS() + "), ");
            s.append("Título: " + proceso.nombre_ventana);
            s.append(Comun.NL);
            n++;
        }
        
        this.taListaProcesos.setText(s.toString());
        this.frmListaProcesos.setVisible(true);
    }

    
    /**
     * Detecta el proceso Vysor y muestra su información en pantalla.
     */
    private void detectarProcesoVysor() {
        CProceso proceso_vysor = pv.getProcesoVysor();
        if (proceso_vysor != null) {
            String texto = proceso_vysor.toString();
            this.taProcesoVysor.setText(texto);
        } else {
            this.taProcesoVysor.setText("No se encuentra el proceso Vysor");
        }
    }

    

    

    /**
     * Envia el proceso Vysor al frente.
     */
    private void enviarProcesoVysorAlFrente() {
        pv.enviarProcesoVysorAlFrente();
    }
    
    
    /**
     * Captura la pantalla del proceso Vysor y la muestra en el formulario.
     */
    private void pantallaVysor2Form() {
        
        BufferedImage img = pv.capturarPantallaVysor();
        mostrarImagenEnForm(img);
    }
    

    /**
     * Muestra una imagen en el formulario.
     * La imagen es escalada a las dimensiones adecuadas.
     * 
     * @param img                               Imagen a mostrar
     */
    private void mostrarImagenEnForm(BufferedImage img) {
        if (img == null) {
            return;
        }
        
        BufferedImage img_escala = Imagenes.escalarImagenStd(img);
        ImageIcon icon = new ImageIcon(img_escala);
        this.lblCapturaVysor.setIcon(icon);
    }
    
    
    /**
     * Guarda en disco la pantalla del proceso Vysor y la muestra en el formulario.
     */
    private void guardarPantallaVysor() {
        
        StringBuilder ruta_fichero_generado = new StringBuilder();
        BufferedImage img = pv.guardarPantallaVysor(ruta_fichero_generado);
        
        if (ruta_fichero_generado.length() > 0) {
            mostrarImagenEnForm(img);
            
            String titulo = "Imagen guardada";
            String mensaje = "Ruta del fichero: " + ruta_fichero_generado;
            JOptionPane.showMessageDialog(this.getFrame(), mensaje, titulo, JOptionPane.INFORMATION_MESSAGE);
        } else {
            String titulo = "Error";
            String mensaje = "No se ha podido guardar la imagen";
            JOptionPane.showMessageDialog(this.getFrame(), mensaje, titulo, JOptionPane.WARNING_MESSAGE);
        }
    }
    
    
    /**
     * Carga la imagen en pantalla.
     */
    private void cargarFicheroImagen() {
        String nombre_fichero = tfNombreFichero.getText();
        String ruta_fichero = Comun.RUTA_CAPTURAS + nombre_fichero;
        
        try {
            imagen_en_pantalla = Imagenes.cargarImagenPng(ruta_fichero);
        } catch (Exception ex) {
            mostrarError(ex);
        }

        if (imagen_en_pantalla != null) {
            mostrarImagenEnForm(imagen_en_pantalla);
        }
    }
    
    
    /**
     * Muestra las regiones predefinidas sobre el fichero especificado.
     */
    private void trazarRegiones() {
        if (imagen_en_pantalla != null) {
            BufferedImage imagen_regiones = Imagenes.duplicarImagen(imagen_en_pantalla);
            Regiones.trazarRegionesPregunta(imagen_regiones);
            //Regiones.trazarRegionesRevancha(imagen_regiones);
            //Regiones.trazarRegionesJugar(imagen_regiones);
            //Regiones.trazarRegionesJuegaYa(imagen_regiones);
            mostrarImagenEnForm(imagen_regiones);
        }
    }
    
    
    /**
     * Trata de identificar la imagen cargada.
     */
    private void identificarPantalla() {
        if (imagen_en_pantalla != null) {
            int tipo_pantalla = Pantallas.identificarPantalla(imagen_en_pantalla);
            String desc_tipo_pantalla = Pantallas.getDescripcionPantalla(tipo_pantalla);
            this.tfIdentificacion.setText(desc_tipo_pantalla);
        }
    }

    
    /**
     * Muestra las coordenadas relativas y absolutas del cursor sobre la imagen capturada.
     * 
     * @param x                                 Posición X del cursor relativa a la captura (0 = izquierda)
     * @param y                                 Posición Y del cursor relativa a la captura (0 = arriba)
     */
    private void mostrarCoordenadasSobrePantalla(int x, int y) {
        int ancho_captura = lblCapturaVysor.getWidth();
        int alto_captura = lblCapturaVysor.getHeight();
        
        double rel_x = 0;
        double rel_y = 0;
        if (ancho_captura > 0) {
            rel_x = (double) x * (double) 100 / (double) ancho_captura;
        }
        if (alto_captura > 0) {
            rel_y = (double) y * (double) 100 / (double) alto_captura;
        }
        
        int i_rel_x = (int) Math.round(rel_x);
        int i_rel_y = (int) Math.round(rel_y);
        String texto = "X: " + i_rel_x + ", Y: " + i_rel_y;
        this.lblPos.setText(texto);
    }



    
    /**
     * Sale de la aplicación.
     * Solicita confirmación previa.
     */
    private void salir() {
        
        /*
        String mensaje = "¿Salir de la aplicación?";
        String titulo = "Confirmación";
        int r = JOptionPane.showConfirmDialog(this.getFrame(), mensaje, titulo, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (r == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
        return;*/
        
        System.exit(0);
    }

    private void testDistribucionGaussiana() {
        double x0 = 0;
        double x1 = 20;
        double desviacion_tipica = (x1 - x0) / 4;
        double offset = (x1 - x0) / 2;
        
        Random r = new Random();
        
        for (int i = 0; i < 1000; i++) {
            double d = -999999;
            while (d < x0 || d > x1) {
                d = r.nextGaussian() * desviacion_tipica + x0 + offset;
            }
            
            int n = (int) Math.round(d);
            System.out.println(n);
        }
        
    }
    

    private void testPantallaPregunta() {
        
        int tipo_pantalla = Pantallas.identificarPantalla(imagen_en_pantalla);
        CPreguntaYRespuestas pr = new CPreguntaYRespuestas(imagen_en_pantalla, tipo_pantalla);
        String info_pr = pr.getInfo();
        this.taInfoPregunta.setText(info_pr);
        
       
        /*
        for (double n = 0; n <= 50; n += 10) {
            for (int i = 0; i < pr.arr_respuestas.length; i++) {
                CRespuesta r = pr.arr_respuestas[i];
                String id = CRespuesta.generarIdUnico(r.getImagen(), n);

                String s = "Umbral negro: " + n + ". Resp " + (i + 1) + ", Id: " + id;
                System.out.println(s);
            }
        }
        */
    }
    
    
    private void test() {
        //BufferedImage imagen_pregunta = Imagenes.extraerSubimagen(imagen_en_pantalla, Regiones.PPREG_RECT_ENUNCIADO_NORMAL);
        //BufferedImage imagen_rec = Imagenes.extraerSubimagen(imagen_en_pantalla, Regiones.PPREG_RECT_IMAGEN_ENUNCIADO_LARGA);
        BufferedImage imagen = imagen_en_pantalla;
        
        Imagenes.reemplazarColor(imagen, Colores.COLOR_VERDE_ACIERTO, Colores.COLOR_BLANCO_FONDO_PREGUNTA, 40);
        Imagenes.reemplazarColor(imagen, Colores.COLOR_ROJO_FALLO, Colores.COLOR_BLANCO_FONDO_PREGUNTA, 40);
        
        //int umbral_negro = 50;
        //Imagenes.convertirBlancoYNegro(imagen, umbral_negro);
        this.mostrarImagenEnForm(imagen);
                
        CPregunta pregunta = new CPregunta(imagen);
        String id = pregunta.getIdUnico();
        //this.tfTest.setText(id);
    }
}
